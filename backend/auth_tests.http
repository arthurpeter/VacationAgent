### Vacation Agent API - FastAPI-Users Authentication Tests
### Base URL
@baseUrl = http://localhost:5000

### Variables (will be set from responses)
@accessToken = 
@userId = 

###
### 1. Health Check
GET {{baseUrl}}/health

###
### 2. Register a new user
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "username": "testuser",
  "email": "test@example.com",
  "password": "testpassword123",
  "first_name": "Test",
  "last_name": "User"
}

###
### 3. Login with JWT (get access token)
# @name login
POST {{baseUrl}}/auth/jwt/login
Content-Type: application/x-www-form-urlencoded

username=test@example.com&password=testpassword123

###
### 4. Login with username (if supported)
# Note: FastAPI-Users typically uses email for login
POST {{baseUrl}}/auth/jwt/login
Content-Type: application/x-www-form-urlencoded

username=testuser&password=testpassword123

###
### 5. Get current user info (protected endpoint)
GET {{baseUrl}}/protected
Authorization: Bearer {{accessToken}}

###
### 6. Get user by ID (protected)
GET {{baseUrl}}/auth/users/{{userId}}
Authorization: Bearer {{accessToken}}

###
### 7. Update current user
PATCH {{baseUrl}}/auth/users/{{userId}}
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "first_name": "Updated",
  "last_name": "Name"
}

###
### 8. Request password reset
POST {{baseUrl}}/auth/forgot-password
Content-Type: application/json

{
  "email": "test@example.com"
}

###
### 9. Request email verification
POST {{baseUrl}}/auth/request-verify-token
Content-Type: application/json

{
  "email": "test@example.com"
}

###
### 10. Test with invalid token
GET {{baseUrl}}/protected
Authorization: Bearer invalid_token_here

###
### 11. Logout (invalidate token - if implemented)
POST {{baseUrl}}/auth/jwt/logout
Authorization: Bearer {{accessToken}}

###
### 12. Try to register duplicate user (should fail)
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "username": "testuser",
  "email": "test@example.com",
  "password": "newpassword123"
}

###
### 13. Login with wrong password (should fail)
POST {{baseUrl}}/auth/jwt/login
Content-Type: application/x-www-form-urlencoded

username=test@example.com&password=wrongpassword

###
### 14. Test protected endpoint without auth (should fail)
GET {{baseUrl}}/protected

### 
### 15. Get all users (if you're a superuser)
GET {{baseUrl}}/auth/users
Authorization: Bearer {{accessToken}}

###
### Notes:
### - FastAPI-Users uses email as the primary login identifier
### - Refresh tokens are handled automatically by the frontend
### - Password reset and email verification require email setup
### - User management endpoints are available for admin users
### - JWT tokens expire based on the configured lifetime

###
### 9. Test other endpoints
GET {{baseUrl}}/health

###
### 10. Test payload template (if available)
POST {{baseUrl}}/payload-template
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
  "test": "data"
}

###
### 11. Test no payload template
GET {{baseUrl}}/no-payload-template
Authorization: Bearer {{accessToken}}

###
# Manual token testing - copy tokens from login response above
### Set tokens manually (copy from login response)
@manualAccessToken = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
@manualRefreshToken = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...

### Test with manual tokens
GET {{baseUrl}}/auth/me
Authorization: Bearer {{manualAccessToken}}

###
### Refresh with manual token
POST {{baseUrl}}/auth/refresh
Content-Type: application/json

{
  "refresh_token": "{{manualRefreshToken}}"
}
